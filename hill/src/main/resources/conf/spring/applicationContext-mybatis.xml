<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			">
			
    
	<!-- 只要涉及到service 就会需要注入dao 因而配置在此文件中 -->
	<context:component-scan base-package="com.bow.service" />
	
    <!--  通过MyBatis来构造mapper******************************* -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="configLocation" value="classpath:conf/mybatis/mybatis-config.xml"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
	    <property name="basePackage" value="com.bow.dao" />
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	    <!-- 在此先不注入实例进去只是注入名字，因为前面配置了jdbc.properties,优先实例化sqlSessionFactory会抛出异常
	    <property name="sqlSessionFactory" ref="sqlSessionFactory"/>  -->
	</bean>
    
    <!-- *****当注入sqlSession后就可以用类似ibatis的操作了****************** -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
		<!-- 如果想要进行批量操作可加入这个属性
		<constructor-arg index="1" value="BATCH" />  -->
	</bean>
	
</beans>